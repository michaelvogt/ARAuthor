apply plugin: 'com.android.application'
apply plugin: 'com.google.ar.sceneform.plugin'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId 'eu.michaelvogt.ar.author'

        // 24 is the minimum since ARCore only works with 24 and higher.
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName '1.0'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        ndk {
            /*
             * Sceneform is available for the following ABIs: arm64-v8a, armv7a,
             * x86_64 and x86. This sample app enables arm64-v8a to run on
             * devices and x86 to run on the emulator. Your application should
             * list the ABIs most appropriate to minimize APK size (arm64-v8a recommended).
             */
            abiFilters 'arm64-v8a', 'x86'
        }
        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation "com.google.ar.sceneform:core:$sceneform_version"
    implementation "com.google.ar.sceneform.ux:sceneform-ux:$sceneform_version"

    implementation('com.github.bumptech.glide:glide:4.8.0') {
        exclude group: 'com.android.support'
    }

    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation "androidx.constraintlayout:constraintlayout:2.0.0-alpha2"
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.fragment:fragment:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation 'androidx.lifecycle:lifecycle-common-java8:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-reactivestreams:2.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt 'androidx.lifecycle:lifecycle-compiler:2.0.0'

    implementation 'android.arch.navigation:navigation-fragment:1.0.0-alpha07'
    implementation 'android.arch.navigation:navigation-ui:1.0.0-alpha07'

    implementation 'androidx.room:room-runtime:2.1.0-alpha02'
    annotationProcessor 'androidx.room:room-compiler:2.1.0-alpha02'
    kapt 'androidx.room:room-compiler:2.1.0-alpha02'

    api 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.0'
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.0.0'

    implementation('com.lyft:scissors:1.1.1') {
        exclude group: 'com.github.bumptech.glide'
    }

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"
    implementation "org.jetbrains.anko:anko-commons:0.10.4"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"


    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'

    androidTestImplementation "androidx.test.ext:junit:1.0.0"
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test:rules:1.1.0'
    androidTestImplementation 'androidx.annotation:annotation:1.0.0'
    androidTestUtil 'androidx.test:orchestrator:1.1.0'

    androidTestImplementation 'androidx.arch.core:core-testing:2.0.0'
    androidTestImplementation 'androidx.room:room-testing:2.1.0-alpha02'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
}

repositories {
    mavenCentral()
    maven { url "https://kotlin.bintray.com/kotlinx" }
}

sceneform.asset('sampledata/models/monarch.obj',
        'sampledata/models/default_model.mat',
        'sampledata/models/monarch.sfa',
        'src/main/res/raw/default_model')

sceneform.asset('sampledata/models/slide.obj',
        'sampledata/models/slide.mat',
        'sampledata/models/slide.sfa',
        'src/main/res/raw/slide')

sceneform.asset('sampledata/models/compare.obj',
        'sampledata/models/compare.mat',
        'sampledata/models/compare.sfa',
        'src/main/res/raw/compare')

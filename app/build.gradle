apply plugin: 'com.android.application'
apply plugin: 'com.google.ar.sceneform.plugin'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'kotlinx-serialization'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId 'eu.michaelvogt.ar.author'

        // 24 is the minimum since ARCore only works with 24 and higher.
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 13
        versionName '0.12 - test'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        ndk {
            /*
             * Sceneform is available for the following ABIs: arm64-v8a, armv7a,
             * x86_64 and x86. This sample app enables arm64-v8a to run on
             * devices and x86 to run on the emulator. Your application should
             * list the ABIs most appropriate to minimize APK size (arm64-v8a recommended).
             */
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86_64'
        }

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

//    no tests are found when used
//    testOptions {
//        execution "ANDROID_TEST_ORCHESTRATOR"
//    }

    buildTypes {
        debug {
            minifyEnabled false
            useProguard false
        }
        release {
            minifyEnabled false
            useProguard false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    dataBinding {
        enabled = true
    }

    dynamicFeatures = [":location_iwamiginzan", ":location_izumotaisha"]
}

dependencies {
    implementation "android.arch.navigation:navigation-fragment:$androidx_navigation"
    implementation "android.arch.navigation:navigation-ui:$androidx_navigation"
    implementation "android.arch.navigation:navigation-ui-ktx:$androidx_navigation"

    implementation 'androidx.cardview:cardview:1.0.0'
    implementation "androidx.constraintlayout:constraintlayout:2.0.0-alpha3"
    //    implementation "androidx.core:core-ktx:1.0.1"
    implementation 'androidx.fragment:fragment:1.1.0-alpha04'

    implementation "androidx.lifecycle:lifecycle-common-java8:$androidx_lifecycle"
    implementation "androidx.lifecycle:lifecycle-extensions:$androidx_lifecycle"
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$androidx_lifecycle"
    kapt "androidx.lifecycle:lifecycle-compiler:$androidx_lifecycle"

    implementation 'androidx.preference:preference:1.1.0-alpha03'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-alpha02'

    implementation "androidx.room:room-runtime:$androidx_room"
    implementation "androidx.room:room-migration:$androidx_room"
    annotationProcessor "androidx.room:room-compiler:$androidx_room"
    kapt "androidx.room:room-compiler:$androidx_room"

    implementation "androidx.viewpager:viewpager:1.0.0"
    implementation "androidx.webkit:webkit:1.0.0"

    implementation 'com.android.volley:volley:1.1.1'

    implementation('com.github.bumptech.glide:glide:4.9.0') {
        exclude group: 'com.android.support'
    }

    implementation 'com.google.android.material:material:1.1.0-alpha04'
    implementation 'com.google.android.play:core:1.4.0'

    implementation "com.google.ar.sceneform:core:$sceneform_version"
    implementation "com.google.ar.sceneform.ux:sceneform-ux:$sceneform_version"

    implementation('com.lyft:scissors:1.1.1') {
        exclude group: 'com.github.bumptech.glide'
    }

    // Still no progress bar available in Material
    implementation 'me.zhanghai.android.materialprogressbar:library:1.6.1'

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"
    implementation "org.jetbrains.anko:anko-commons:0.10.8"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.21"

    implementation "uk.co.samuelwall:material-tap-target-prompt:2.14.0"

    testImplementation 'junit:junit:4.13-beta-2'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation 'io.mockk:mockk:1.9.1.kotlin12'

    androidTestImplementation 'androidx.test:core:1.1.1-alpha01'
    androidTestImplementation 'androidx.test:runner:1.1.2-alpha01'
    androidTestImplementation 'androidx.test:rules:1.1.2-alpha01'
    androidTestUtil 'androidx.test:orchestrator:1.1.2-alpha01'

    androidTestImplementation 'androidx.test.ext:junit:1.1.1-alpha01'
    androidTestImplementation 'androidx.annotation:annotation:1.1.0-alpha01'

    androidTestImplementation 'androidx.arch.core:core-testing:2.0.0'
    androidTestImplementation "androidx.room:room-testing:$androidx_room"
}

repositories {
    mavenCentral()
    maven { url "https://kotlin.bintray.com/kotlinx" }
}


sceneform.asset('sampledata/models/big_old_house.obj',
        'default',
        'sampledata/models/big_old_house.sfa',
        'src/main/res/raw/big_old_house')
